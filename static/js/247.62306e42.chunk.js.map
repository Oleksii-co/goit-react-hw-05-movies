{"version":3,"file":"static/js/247.62306e42.chunk.js","mappings":"uMA+CA,UA1Ca,WACX,IAAQA,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAWA,OATAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAoBN,GAAUO,MAAK,SAAAC,GACb,IAAhBA,EAAKC,QAGTL,EAAWI,EACZ,GACF,GAAE,CAACR,KAGF,gCACGG,EAAQM,OAAS,IAChB,wBACGN,EAAQO,KAAI,SAAAC,GACX,OACE,2BACE,gBACEC,IACED,EAAIE,aAAJ,yCACsCF,EAAIE,cAD1C,gHAIFC,IAAI,MAEN,kCAAUH,EAAII,SACd,uCAAeJ,EAAIK,eAVZL,EAAIM,GAahB,MAGe,IAAnBd,EAAQM,SACP,SAAC,IAAD,CAAUS,QAAS,4CAI1B,C,mCCxCD,IAHiB,SAAC,GAAiB,IAAfA,EAAc,EAAdA,QAClB,OAAO,uBAAIA,GACZ,C,+LCFKC,EAAU,mCACVC,EAAW,+BAEJC,EAAa,mCAAG,oGACFC,EAAAA,EAAAA,IAAA,UACpBF,EADoB,uCACmBD,IAFjB,cACrBI,EADqB,yBAKpBA,EAAWf,KAAKgB,SALI,2CAAH,qDAQbC,EAAkB,mCAAG,WAAMC,GAAN,uFACXJ,EAAAA,EAAAA,IAAA,UAChBF,EADgB,iCACiBD,EADjB,kBACkCO,IAFvB,cAC1BC,EAD0B,yBAIzBA,EAAOnB,KAAKgB,SAJa,2CAAH,sDAOlBI,EAAmB,mCAAG,WAAM5B,GAAN,uFACNsB,EAAAA,EAAAA,IAAA,UACtBF,EADsB,kBACJpB,EADI,oBACgBmB,IAFV,cAC3BU,EAD2B,yBAK1BA,EAAarB,MALa,2CAAH,sDAQnBF,EAAmB,mCAAG,WAAMN,GAAN,uFACNsB,EAAAA,EAAAA,IAAA,UACtBF,EADsB,kBACJpB,EADI,4BACwBmB,IAFlB,cAC3BW,EAD2B,yBAK1BA,EAAatB,KAAKuB,MALQ,2CAAH,sDAQnBC,EAAmB,mCAAG,WAAMhC,GAAN,uFACNsB,EAAAA,EAAAA,IAAA,UACtBF,EADsB,kBACJpB,EADI,4BACwBmB,IAFlB,cAC3Bc,EAD2B,yBAK1BA,EAAazB,KAAKgB,SALQ,2CAAH,qD","sources":["components/Cast/Cast.jsx","components/NotFound/NotFound.jsx","services/api.js"],"sourcesContent":["import NotFound from 'components/NotFound/NotFound';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCreditsById } from 'services/api';\n\nconst Cast = () => {\n  const { moviesId } = useParams();\n  const [credits, setCredits] = useState([]);\n\n  useEffect(() => {\n    getMovieCreditsById(moviesId).then(data => {\n      if (data.length === 0) {\n        return;\n      }\n      setCredits(data);\n    });\n  }, [moviesId]);\n\n  return (\n    <>\n      {credits.length > 0 && (\n        <ul>\n          {credits.map(inf => {\n            return (\n              <li key={inf.id}>\n                <img\n                  src={\n                    inf.profile_path\n                      ? `https://image.tmdb.org/t/p/w200${inf.profile_path}`\n                      : `https://upload.wikimedia.org/wikipedia/commons/thumb/f/f9/No-image-available.jpg/200px-No-image-available.jpg`\n                  }\n                  alt=\"\"\n                />\n                <p>Name: {inf.name}</p>\n                <p>Character: {inf.character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n      {credits.length === 0 && (\n        <NotFound message={'We don`t have any cast for this movie'} />\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import PropTypes from 'prop-types';\n\nconst NotFound = ({ message }) => {\n  return <p>{message}</p>;\n};\nexport default NotFound;\n\nNotFound.propTypes = {\n  message: PropTypes.string,\n};\n","import axios from 'axios';\n\nconst API_KEY = '201a200521ee100a5b50e6d6c06ca200';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrendMovie = async () => {\n  const trendMovie = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return trendMovie.data.results;\n};\n\nexport const searchMovieByQuery = async query => {\n  const movies = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return movies.data.results;\n};\n\nexport const getMovieDetailsById = async moviesId => {\n  const movieDetails = await axios.get(\n    `${BASE_URL}/movie/${moviesId}?api_key=${API_KEY}`\n  );\n\n  return movieDetails.data;\n};\n\nexport const getMovieCreditsById = async moviesId => {\n  const movieCredits = await axios.get(\n    `${BASE_URL}/movie/${moviesId}/credits?api_key=${API_KEY}`\n  );\n\n  return movieCredits.data.cast;\n};\n\nexport const getMovieReviewsById = async moviesId => {\n  const movieReviews = await axios.get(\n    `${BASE_URL}/movie/${moviesId}/reviews?api_key=${API_KEY}`\n  );\n\n  return movieReviews.data.results;\n};\n"],"names":["moviesId","useParams","useState","credits","setCredits","useEffect","getMovieCreditsById","then","data","length","map","inf","src","profile_path","alt","name","character","id","message","API_KEY","BASE_URL","getTrendMovie","axios","trendMovie","results","searchMovieByQuery","query","movies","getMovieDetailsById","movieDetails","movieCredits","cast","getMovieReviewsById","movieReviews"],"sourceRoot":""}